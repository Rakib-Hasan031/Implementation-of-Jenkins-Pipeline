pipeline {
  agent {
    docker {
      image 'maven:3.8.1-openjdk-11'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/Rakib-Hasan031/Implementation-of-Jenkins-Pipeline.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'cd "Java based application/Java-spring-boot-Application" && mvn clean package'
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "rakibhasan031/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-credential')
      }
      steps {
        script {
          sh '''
            apt-get update && apt-get install -y docker.io
            cd "Java based application/Java-spring-boot-Application" && docker build -t ${DOCKER_IMAGE} .
          '''
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', REGISTRY_CREDENTIALS) {
            dockerImage.push()
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Implementation-of-Jenkins-Pipeline"
        GIT_USER_NAME = "Rakib-Hasan031"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "hasanrakib373@gmail.com"
            git config user.name "Rakib Hasan"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" "Java based application/Mainfest-Repo/deployment.yml"
            git add "Java based application/Mainfest-Repo/deployment.yml"
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
