pipeline {
  agent {
    docker {
      image 'maven:3.8.1-openjdk-11'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        // Uncomment the next line to enable the checkout of your Git repository
        // git branch: 'main', url: 'https://github.com/Rakib-Hasan031/Implementation-of-Jenkins-Pipeline.git'
      }
    }
    
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // Build the project and create a JAR file
        sh 'cd "Java based application/Java-spring-boot-Application" && mvn clean package'
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "Rakib/ultimate-cicd:${BUILD_NUMBER}" // Docker image tag
        REGISTRY_CREDENTIALS = credentials('docker-cred') // Docker registry credentials
      }
      steps {
        script {
            // Build Docker image
            sh 'cd "Java based application/Java-spring-boot-Application" && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            
            // Push the image to the Docker registry
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Implementation-of-Jenkins-Pipeline" // GitHub repository name
        GIT_USER_NAME = "Rakib-Hasan031" // GitHub username
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
            sh '''
                git config user.email "hasanrakib373@gmail.com"
                git config user.name "Rakib Hasan"
                # No need to explicitly set BUILD_NUMBER since Jenkins automatically provides it
                sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" "Java based application/Mainfest-Repo/deployment.yml"
                git add "Java based application/Mainfest-Repo/deployment.yml"
                git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            '''
        }
      }
    }
  }
}
